// <auto-generated />
using System;
using BoilerplateZadatak.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BoilerplateZadatak.Migrations
{
    [DbContext(typeof(BoilerplateZadatakDbContext))]
    partial class BoilerplateZadatakDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BoilerplateZadatak.Models.Kancelarija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Opis");

                    b.HasKey("Id");

                    b.ToTable("Kancelarije");
                });

            modelBuilder.Entity("BoilerplateZadatak.Models.Osoba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime");

                    b.Property<int>("KancelarijaId");

                    b.Property<string>("Prezime");

                    b.HasKey("Id");

                    b.HasIndex("KancelarijaId");

                    b.ToTable("Osobe");
                });

            modelBuilder.Entity("BoilerplateZadatak.Models.OsobaUredjaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("KrajKoriscenja");

                    b.Property<int>("OsobaId");

                    b.Property<DateTime>("PocetakKoriscenja");

                    b.Property<int>("UredjajId");

                    b.HasKey("Id");

                    b.HasIndex("OsobaId");

                    b.HasIndex("UredjajId");

                    b.ToTable("OsobaUredjaj");
                });

            modelBuilder.Entity("BoilerplateZadatak.Models.Uredjaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("Id");

                    b.ToTable("Uredjaj");
                });

            modelBuilder.Entity("BoilerplateZadatak.Models.Osoba", b =>
                {
                    b.HasOne("BoilerplateZadatak.Models.Kancelarija", "Kancelarija")
                        .WithMany("Osobe")
                        .HasForeignKey("KancelarijaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BoilerplateZadatak.Models.OsobaUredjaj", b =>
                {
                    b.HasOne("BoilerplateZadatak.Models.Osoba", "Osoba")
                        .WithMany("OsobaUredjaji")
                        .HasForeignKey("OsobaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BoilerplateZadatak.Models.Uredjaj", "Uredjaj")
                        .WithMany()
                        .HasForeignKey("UredjajId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
